{
  "rules": {
    "jobs": {
      ".read": true,
      "$jobId": {
        ".write": "newData.child('authSecret').val() === 'benalsam_super_secret_2025'",
        ".validate": "newData.hasChildren(['id', 'listingId', 'type', 'status', 'timestamp', 'source', 'authSecret'])",
        "id": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "listingId": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "type": {
          ".validate": "newData.isString()"
        },
        "status": {
          ".validate": "newData.isString() && (newData.val() === 'pending' || newData.val() === 'processing' || newData.val() === 'completed' || newData.val() === 'failed')"
        },
        "listingStatus": {
          ".validate": "!newData.exists() || newData.isString()"
        },
        "timestamp": {
          ".validate": "newData.isString()"
        },
        "processedAt": {
          ".validate": "!newData.exists() || newData.isString()"
        },
        "queuedAt": {
          ".validate": "!newData.exists() || newData.isString()"
        },
        "completedAt": {
          ".validate": "!newData.exists() || newData.isString()"
        },
        "failedAt": {
          ".validate": "!newData.exists() || newData.isString()"
        },
        "retryCount": {
          ".validate": "!newData.exists() || newData.isNumber()"
        },
        "maxRetries": {
          ".validate": "!newData.exists() || newData.isNumber()"
        },
        "error": {
          ".validate": "!newData.exists() || newData.isString()"
        },
        "source": {
          ".validate": "newData.isString()"
        },
        "authSecret": {
          ".validate": "newData.isString() && newData.val() === 'benalsam_super_secret_2025'"
        }
      }
    },
    "test": {
      ".read": true,
      "$listingId": {
        ".write": "newData.child('authSecret').val() === 'benalsam_super_secret_2025'",
        ".validate": "newData.hasChildren(['id', 'status', 'timestamp', 'authSecret'])",
        "authSecret": {
          ".validate": "newData.isString() && newData.val() === 'benalsam_super_secret_2025'"
        }
      }
    }
  }
}
